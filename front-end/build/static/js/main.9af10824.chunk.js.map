{"version":3,"sources":["porsche3.jpg","prometheus.png","Homepage.js","SessionsPerPoint.js","SessionsPerStation.js","SessionsPerVehicle.js","SessionsPerProvider.js","SelectStation.js","ChargeEV.js","Diagrams.js","Navbar.js","NavbarAdmin.js","UserMod.js","UserGet.js","HealthCheck.js","UserDelete.js","ResetSessions.js","SubmitFile.js","App.js","reportWebVitals.js","index.js"],"names":["Homepage","props","className","src","logo","React","Component","SessionsPerPoint","state","startDate","undefined","endDate","point","station","sessionData","responseReceived","handleChange","bind","handleSubmit","displayResults","event","console","log","target","name","value","this","setState","e","preventDefault","url","axios","get","headers","document","cookie","then","res","obj","data","JSON","stringify","catch","error","Object","entries","map","key","dict","index","onChange","type","onClick","SessionsPerStation","onSubmit","SessionsPerVehicle","vehicle","SessionsPerProvider","provider","SelectStation","area","stationList","sortBy","sort","a","b","average_rating","wait_time_estimation","ChargeEV","charger","policy","protocol","energy","totalCost","rating","costPerkWh","costEstimated","clickedProceed","handleProceed","displayFinalStep","completeTransaction","randomCost","Math","random","round","method","requestObject","post","Diagrams","plotData","vehicleData","stationData","command","handlePlotSubmit","handleVehicleSubmit","handleAnalyticsSubmit","selectRenderer","plotResults","displayAnalytics","vehicleReport","avgenergy","avgincome","xlabels","sessions","incomes","energies","i","length","push","labels","datasets","label","options","scales","yAxes","ticks","beginAtZero","Navbar","loggedIn","to","NavbarAdmin","UserMod","username","password","UserGet","userData","notfound","Healthcheck","status","UserDelete","clickedDelete","handleClick","finalConfirmation","delete","ResetSessions","confirm","click0","click1","click2","click3","handleClick0","handleClick1","handleClick2","handleClick3","displayConfirmation1","displayConfirmation2","displayConfirmation3","displayConfirmation4","SubmitFile","fileInput","createRef","result","response","newFile","current","files","form_data","FormData","append","_boundary","val","accept","ref","App","mySubmitHandler","dateto","datefrom","showstation","showStation","myChangeHandler","nam","showspecs","token","loggedin","showComponent","tokenPath","role","_onButtonClick","LoginProcess","LogoutProcess","exact","path","component","HealthCheck","porsche","querystring","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9af10824.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/porsche3.453a842d.jpg\";","export default __webpack_public_path__ + \"static/media/prometheus.cf79151e.png\";","import React from 'react';\r\nimport logo from './prometheus.png';\r\nimport './Homepage.css';\r\n\r\nclass Homepage extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>This is the home page</h1>\r\n                <div className = \"home-container\">\r\n                    <img src = {logo} className = \"bg-image\" />\r\n                    <div className = \"home-text\">\r\n                        <p>Χαράλαμπος Δάλπης - 03117067</p>\r\n                        <p>Σωτήριος Κανελλόπουλος - 03117101</p>\r\n                        <p>Αντώνιος Καραντώνης - 03117439</p>\r\n                        <p>Δημήτριος Κυριακίδης - 03117077</p>\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport './Sessions.css'\r\nimport axios from 'axios';\r\nimport querystring from 'querystring';\r\n\r\nclass SessionsPerPoint extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            startDate: undefined,\r\n            endDate: undefined,\r\n            point: null,\r\n            station: null,\r\n            sessionData: null,\r\n            responseReceived: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.displayResults = this.displayResults.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        console.log(event.target.name);\r\n        let target = event.target;\r\n        let value = target.value;\r\n        // must check for type if datatypes are different, here both are strings\r\n        let name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        if(this.state.point && this.state.station && this.state.startDate && this.state.endDate)\r\n        {\r\n\r\n            // connect with backend function - send request\r\n            let url = `https://localhost:8765/evcharge/api/SessionsPerPoint/${this.state.station}/${this.state.point}/${this.state.startDate}/${this.state.endDate}`;\r\n\r\n\r\n                axios.get(url, {\r\n                                headers: {\r\n                                        \"X-OBSERVATORY-AUTH\": `${document.cookie}`\r\n                                }\r\n                        }).then(res => {\r\n                                let obj = res.data;\r\n                                JSON.stringify(obj)\r\n                                this.setState({sessionData: obj})\r\n                                if(this.state.sessionData)\r\n                                        this.setState({responseReceived : true});\r\n\r\n                        })\r\n                        .catch(error => {\r\n                                console.error(error)\r\n                        });\r\n\r\n\r\n\r\n        }\r\n        else\r\n        {\r\n            this.setState({ error: \"Information required\" });\r\n        }\r\n    }\r\n\r\n    displayResults()\r\n    {\r\n        return (\r\n            <div className = \"result-area\">\r\n                <div>\r\n                    <p>Station: {this.state.sessionData[\"Station\"]}</p>\r\n                    <p>Point: {this.state.sessionData[\"Point\"]}</p>\r\n                    <p>Point operator: {this.state.sessionData[\"PointOperator\"]}</p>\r\n                    <p>Number of sessions: {this.state.sessionData[\"NumberOfChargingSessions\"]}</p>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            {Object.entries(this.state.sessionData[\"ChargingSessionsList\"][0]).map(([key, value]) => <th key = {key} className = \"table-header\"> {key} </th> )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.state.sessionData[\"ChargingSessionsList\"].map(function(dict, index){\r\n                            return (\r\n                                <tr key = {index}>\r\n                                    {Object.entries(dict).map(([key, value]) => <td key = {key} className = \"table-data\"> {value} </td> )}\r\n                                </tr>\r\n                            );})\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>Sessions per Point</h1>\r\n                <div className = \"session-form-area\">\r\n                    <form>\r\n                        <label>\r\n                            Station:\r\n                            <input className = \"station-field\" name = \"station\" value = {this.state.station} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            Point:\r\n                            <input className = \"point-field\" name = \"point\" value = {this.state.point} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            From:\r\n                            <input className = \"date-field\" type = \"date\" name = \"startDate\" value = {this.state.startDate} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            Until:\r\n                            <input className = \"date-field\" type = \"date\" name = \"endDate\" value = {this.state.endDate} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <button className = \"search-button\" onClick = {this.handleSubmit}>Search</button>\r\n                      </form>\r\n                  </div>\r\n                  <hr />\r\n                  {this.state.responseReceived ? this.displayResults() : <div></div>}\r\n              </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SessionsPerPoint;\r\n","import React from 'react';\r\nimport './Sessions.css'\r\nimport axios from 'axios';\r\nimport querystring from 'querystring';\r\n\r\nclass SessionsPerStation extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            station: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            sessionData: null,\r\n            responseReceived: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.displayResults = this.displayResults.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        // must check for type if datatypes are different, here both are strings\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(event)\r\n    {\r\n        event.preventDefault();\r\n\r\n        if(this.state.station && this.state.startDate && this.state.endDate)\r\n        {\r\n\r\n            // connect with backend function - send request\r\n            let url = `https://localhost:8765/evcharge/api/SessionsPerStation/${this.state.station}/${this.state.startDate}/${this.state.endDate}`;\r\n\r\n\r\n                axios.get(url, {\r\n                                headers: {\r\n                                        \"X-OBSERVATORY-AUTH\": `${document.cookie}`\r\n                                }\r\n                        }).then(res => {\r\n                                let obj = res.data;\r\n                                JSON.stringify(obj)\r\n                                this.setState({sessionData: obj})\r\n                                if(this.state.sessionData)\r\n                                        this.setState({responseReceived : true});\r\n\r\n                        })\r\n                        .catch(error => {\r\n                                console.error(error)\r\n                        });\r\n\r\n\r\n\r\n        }\r\n        else\r\n        {\r\n            this.setState({ error: \"Information required\" });\r\n        }\r\n    }\r\n\r\n\r\n    displayResults()\r\n    {\r\n        return (\r\n            <div className = \"result-area\">\r\n                <div>\r\n                    <p>Station: {this.state.sessionData[\"StationID\"]}</p>\r\n                    <p>Active chargers: {this.state.sessionData[\"NumberOfActivePoints\"]}</p>\r\n                    <p>Station operator: {this.state.sessionData[\"Operator\"]}</p>\r\n                    <p>Number of sessions: {this.state.sessionData[\"NumberOfChargingSessions\"]}</p>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            {Object.entries(this.state.sessionData[\"SessionsSummaryList\"][0]).map(([key, value]) => <th key = {key} className = \"table-header\"> {key} </th> )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.state.sessionData[\"SessionsSummaryList\"].map(function(dict, index){\r\n                            return (\r\n                                <tr key = {index}>\r\n                                    {Object.entries(dict).map(([key, value]) => <td key = {key} className = \"table-data\"> {value} </td> )}\r\n                                </tr>\r\n                            );})\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>Sessions per Station</h1>\r\n                <div className = \"session-form-area\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            Station:\r\n                            <input className = \"station-field\" name = \"station\" value = {this.state.station} onChange={this.handleChange}/>\r\n                        </label> <br />\r\n                        <label>\r\n                            From:\r\n                            <input className = \"date-field\" type = \"date\" name = \"startDate\" value = {this.state.startDate} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            Until:\r\n                            <input className = \"date-field\" type = \"date\" name = \"endDate\" value = {this.state.endDate} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <button className = \"search-button\" onClick = {this.handleSubmit}>Search</button>\r\n                      </form>\r\n                  </div>\r\n                  {this.state.responseReceived ? this.displayResults() : <div></div>}\r\n              </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SessionsPerStation;\r\n","import React from 'react';\r\nimport './Sessions.css'\r\nimport axios from 'axios';\r\nimport querystring from 'querystring';\r\n\r\nclass SessionsPerVehicle extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            startDate: undefined,\r\n            endDate: undefined,\r\n            vehicle: null,\r\n            sessionData: null,\r\n            responseReceived: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.displayResults = this.displayResults.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        console.log(event.target.name);\r\n        let target = event.target;\r\n        let value = target.value;\r\n        // must check for type if datatypes are different, here both are strings\r\n        let name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        if(this.state.vehicle && this.state.startDate && this.state.endDate)\r\n        {\r\n\r\n            // connect with backend function - send request\r\n            let url = `https://localhost:8765/evcharge/api/SessionsPerEV/${this.state.vehicle}/${this.state.startDate}/${this.state.endDate}`;\r\n\r\n\r\n                axios.get(url, {\r\n                                headers: {\r\n                                        \"X-OBSERVATORY-AUTH\": `${document.cookie}`\r\n                                }\r\n                        }).then(res => {\r\n                                let obj = res.data;\r\n                                JSON.stringify(obj)\r\n                                this.setState({sessionData: obj})\r\n                                if(this.state.sessionData)\r\n                                        this.setState({responseReceived : true});\r\n\r\n                        })\r\n                        .catch(error => {\r\n                                console.error(error)\r\n                        });\r\n\r\n\r\n\r\n        }\r\n        else\r\n        {\r\n            this.setState({ error: \"Information required\" });\r\n        }\r\n    }\r\n\r\n    displayResults()\r\n    {\r\n        return (\r\n            <div className = \"result-area\">\r\n                <div>\r\n                    <p>Vehicle: {this.state.sessionData[\"VehicleID\"]}</p>\r\n                    <p>Energy consumed: {this.state.sessionData[\"TotalEnergyConsumed\"]}</p>\r\n                    <p>Points visited: {this.state.sessionData[\"NumberOfVisitedPoints\"]}</p>\r\n                    <p>Number of sessions: {this.state.sessionData[\"NumberOfVehicleChargingSessions\"]}</p>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            {Object.entries(this.state.sessionData[\"VehicleChargingSessionsList\"][0]).map(([key, value]) => <th key = {key} className = \"table-header\"> {key} </th> )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.state.sessionData[\"VehicleChargingSessionsList\"].map(function(dict, index){\r\n                            return (\r\n                                <tr key = {index}>\r\n                                    {Object.entries(dict).map(([key, value]) => <td key = {key} className = \"table-data\"> {value} </td> )}\r\n                                </tr>\r\n                            );})\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>Sessions per Vehicle</h1>\r\n                <div className = \"session-form-area\">\r\n                    <form>\r\n                        <label>\r\n                            Vehicle:\r\n                            <input className = \"vehicle-field\" name = \"vehicle\" value = {this.state.vehicle} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            From:\r\n                            <input className = \"date-field\" type = \"date\" name = \"startDate\" value = {this.state.startDate} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            Until:\r\n                            <input className = \"date-field\" type = \"date\" name = \"endDate\" value = {this.state.endDate} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <button className = \"search-button\" onClick = {this.handleSubmit}>Search</button>\r\n                      </form>\r\n                  </div>\r\n                  <hr />\r\n                  {this.state.responseReceived ? this.displayResults() : <div></div>}\r\n              </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SessionsPerVehicle;\r\n","import React from 'react';\r\nimport './Sessions.css'\r\nimport axios from 'axios';\r\nimport querystring from 'querystring';\r\n\r\nclass SessionsPerProvider extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            provider: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            sessionData: null,\r\n            responseReceived: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.displayResults = this.displayResults.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        // must check for type if datatypes are different, here both are strings\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(event)\r\n    {\r\n        event.preventDefault();\r\n\r\n        if(this.state.provider && this.state.startDate && this.state.endDate)\r\n        {\r\n\r\n            // connect with backend function - send request\r\n            let url = `https://localhost:8765/evcharge/api/SessionsPerProvider/${this.state.provider}/${this.state.startDate}/${this.state.endDate}`;\r\n\r\n\r\n                axios.get(url, {\r\n                                headers: {\r\n                                        \"X-OBSERVATORY-AUTH\": `${document.cookie}`\r\n                                }\r\n                        }).then(res => {\r\n                                let obj = res.data;\r\n                                JSON.stringify(obj);\r\n\r\n                                this.setState({sessionData: obj});\r\n                                if(this.state.sessionData)\r\n                                        this.setState({responseReceived : true});\r\n\r\n                        })\r\n                        .catch(error => {\r\n                                console.error(error)\r\n                        });\r\n        }\r\n        else\r\n        {\r\n            this.setState({ error: \"Information required\" });\r\n        }\r\n    }\r\n\r\n\r\n    displayResults()\r\n    {\r\n        return (\r\n            <div className = \"result-area\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            {Object.entries(this.state.sessionData[0]).map(([key, value]) => <th key = {key} className = \"table-header\"> {key} </th> )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.state.sessionData.map(function(dict, index){\r\n                            return (\r\n                                <tr key = {index}>\r\n                                    {Object.entries(dict).map(([key, value]) => <td key = {key} className = \"table-data\"> {value} </td> )}\r\n                                </tr>\r\n                            );})\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>Sessions per Provider</h1>\r\n                <div className = \"session-form-area\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            Provider:\r\n                            <select className = \"provider-field\" name = \"provider\" value = {this.state.provider} onChange={this.handleChange}>\r\n                                <option></option>\r\n                                <option value = \"DEDDIE\">ΔΕΔΔΗΕ</option>\r\n                                <option value = \"PROTERGEIA\">PROTERGEIA</option>\r\n                                <option value = \"ELPEDISON\">ELPEDISON</option>\r\n                                <option value = \"WATT&VOLT\">WATT&VOLT</option>\r\n                                <option value = \"NRG\">NRG</option>\r\n                            </select>\r\n                        </label> <br />\r\n                        <label>\r\n                            From:\r\n                            <input className = \"date-field\" type = \"date\" name = \"startDate\" value = {this.state.startDate} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            Until:\r\n                            <input className = \"date-field\" type = \"date\" name = \"endDate\" value = {this.state.endDate} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <button className = \"search-button\" onClick = {this.handleSubmit}>Search</button>\r\n                      </form>\r\n                  </div>\r\n                  <hr />\r\n                  {this.state.responseReceived ? this.displayResults() : <div></div>}\r\n              </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SessionsPerProvider;\r\n","import React from 'react';\r\nimport './SelectStation.css';\r\nimport axios from 'axios';\r\nimport querystring from 'querystring';\r\nimport './Tables.css';\r\n\r\nclass SelectStation extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = { area: null, responseReceived: false, stationList: null, sortBy: null, error: null};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.displayResults = this.displayResults.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n        this.setState({ error: null });\r\n\r\n            // connect with backend function\r\n            if(this.state.area)\r\n             {\r\n\r\n                 // connect with backend function - send request\r\n                 let url = `https://localhost:8765/evcharge/api/StationsNear/${this.state.area}`;\r\n\r\n\r\n                     axios.get(url, {\r\n                                     headers: {\r\n                                             \"X-OBSERVATORY-AUTH\": `${document.cookie}`\r\n                                     }\r\n                             }).then(res => {\r\n                                     let obj = res.data;\r\n                                     JSON.stringify(obj)\r\n                                     if(this.state.sortBy == \"rating\") obj = obj.sort((a, b) => b.average_rating - a.average_rating)\r\n                                     else if(this.state.sortBy == \"wait-time\") obj= obj.sort((a, b) => a.wait_time_estimation - b.wait_time_estimation)\r\n                                     this.setState({stationList: obj})\r\n                                     if(this.state.stationList){\r\n                                             this.setState({responseReceived : true});\r\n                                     }\r\n\r\n                             })\r\n                             .catch(error => {\r\n                                     console.error(error)\r\n                             });\r\n\r\n\r\n\r\n             }\r\n             else\r\n             {\r\n                 this.setState({ error: \"Information required\" });\r\n             }\r\n\r\n    }\r\n\r\n    displayResults()\r\n    {\r\n        return (\r\n            <div className = \"result-area\">\r\n                <table>\r\n                    <tr>\r\n                        {Object.entries(this.state.stationList[0]).map(([key, value]) => <th key = {key} className = \"table-header\"> {key} </th> )}\r\n                    </tr>\r\n                    { this.state.stationList.map(function(dict, index){\r\n                        return (\r\n                            <tr>\r\n                                {Object.entries(dict).map(([key, value]) => <td key = {key} className = \"table-data\"> {value} </td> )}\r\n                            </tr>\r\n                        );})\r\n                    }\r\n\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>First Use Case</h1>\r\n                <div className = \"select-station-area\">\r\n                    <form>\r\n                        <label className = \"area-label\">\r\n                            Area:\r\n                            <input type = \"text\" name = \"area\" value = {this.state.area} onChange = {this.handleChange}/>\r\n                        </label>\r\n                        <label className = \"sort-by-label\">\r\n                            Sort by:\r\n                            <select className = \"sort-by\" name = \"sortBy\" value = {this.state.sortBy} onChange={this.handleChange}>\r\n                                <option></option>\r\n                                <option value = \"rating\">Rating</option>\r\n                                <option value = \"wait-time\">Wait time</option>\r\n                            </select>\r\n                        </label>\r\n                        <br />\r\n                        <button className = \"search-button\" onClick = {this.handleSubmit}>Search</button>\r\n                    </form>\r\n                </div>\r\n                <hr/>\r\n                {this.state.responseReceived ? this.displayResults() : <div></div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectStation;\r\n","import React from 'react';\r\nimport './ChargeEV.css'\r\nimport axios from 'axios';\r\nimport querystring from 'querystring';\r\n\r\nclass ChargeEV extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            vehicle: null,\r\n            station: null,\r\n            charger: null,\r\n            policy: null,\r\n            protocol: null,\r\n            energy: null,\r\n            totalCost: null,\r\n            rating: null,\r\n            costPerkWh: null,\r\n            costEstimated: false,\r\n            clickedProceed: false,\r\n            responseReceived: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.displayResults = this.displayResults.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleProceed = this.handleProceed.bind(this);\r\n        this.displayFinalStep = this.displayFinalStep.bind(this);\r\n        this.completeTransaction = this.completeTransaction.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        console.log(event.target.name);\r\n        let target = event.target;\r\n        let value = target.value;\r\n        // must check for type if datatypes are different, here both are strings\r\n        let name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n        // random cost per kWh\r\n        // calculate cost with input\r\n        // display cost estimate\r\n        // button for proceed & abort\r\n        // -> proceed\r\n        // cash or card & rating\r\n        // complete transaction\r\n        // new entry in db with date and time\r\n        if(this.state.vehicle && this.state.station && this.state.charger && this.state.protocol && this.state.policy && this.state.energy)\r\n        {\r\n            let randomCost = Math.random() * 0.06 + 0.08;\r\n            randomCost = Math.round(randomCost * 100) / 100;\r\n            this.setState({ totalCost : randomCost * this.state.energy});\r\n            this.setState({ costPerkWh : randomCost});\r\n            this.setState({ costEstimated : true});\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Insufficient information\");\r\n        }\r\n    }\r\n\r\n    handleProceed(e)\r\n    {\r\n        e.preventDefault();\r\n        this.setState({clickedProceed : true});\r\n    }\r\n\r\n    displayFinalStep()\r\n    {\r\n        return (\r\n            <div className = \"transaction-area\">\r\n                <div className = \"methodButtons\" onChange = {this.handleChange}>\r\n                    <input type=\"radio\" value=\"Cash\" name=\"method\" /> Cash\r\n                    <input type=\"radio\" value=\"Card\" name=\"method\" /> Card\r\n                </div>\r\n                <label>\r\n                    Rate:\r\n                    <select className = \"rating-field\" name = \"rating\" value = {this.state.rating} onChange={this.handleChange}>\r\n                        <option></option>\r\n                        <option value = {1}>1</option>\r\n                        <option value = {2}>2</option>\r\n                        <option value = {3}>3</option>\r\n                        <option value = {4}>4</option>\r\n                        <option value = {5}>5</option>\r\n                    </select>\r\n                </label>\r\n                <br />\r\n                <br />\r\n                <button className = \"cost-button\" onClick = {this.completeTransaction}>Complete transaction</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    completeTransaction()\r\n    {\r\n        if(this.state.method)\r\n        {\r\n            let requestObject = {\r\n                \"rating\" : this.state.rating,\r\n                \"cost_per_kwh\" : this.state.costPerkWh,\r\n                \"total_cost\" : this.state.totalCost,\r\n                \"payment_method\" : this.state.method,\r\n                \"energy_delivered\" : this.state.energy,\r\n                \"protocol\" : this.state.protocol,\r\n                \"price_policy\" : this.state.policy,\r\n                \"charger_id\" : this.state.charger,\r\n                \"charger_station_id\" : this.state.station,\r\n                \"license_plate\" : this.state.vehicle\r\n            }\r\n\r\n            let url = `https://localhost:8765/evcharge/api/ChargeEV`;\r\n\r\n\r\n            axios.post(url,requestObject, {\r\n                            headers: {\r\n                                    \"X-OBSERVATORY-AUTH\": `${document.cookie}`\r\n                            }\r\n                    }).then(res => {\r\n                            let obj = res.data;\r\n                            JSON.stringify(obj)\r\n                            this.setState({responseReceived : true});\r\n\r\n\r\n                    })\r\n                    .catch(error => {\r\n                            console.error(error)\r\n                    });\r\n            }\r\n        else\r\n        {\r\n            console.log(\"please choose method\");\r\n        }\r\n    }\r\n\r\n    displayResults()\r\n    {\r\n        return (\r\n            <div className = \"result-area\">\r\n                <p>Cost estimation: {this.state.totalCost} €</p>\r\n                <button className = \"cost-button\" onClick = {this.handleProceed}>Proceed</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>Second Use Case - Charging Vehicle</h1>\r\n                <div className = \"charge-form-area\">\r\n                    <form>\r\n                        <label>\r\n                            Vehicle:\r\n                            <input className = \"vehicle-field\" name = \"vehicle\" value = {this.state.vehicle} onChange = {this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            Station:\r\n                            <input className = \"station-field\" name = \"station\" value = {this.state.station} onChange = {this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            Charger:\r\n                            <input className = \"charger-field\" name = \"charger\" value = {this.state.charger} onChange = {this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            Protocol:\r\n                            <select className = \"protocol-field\" name = \"protocol\" value = {this.state.protocol} onChange={this.handleChange}>\r\n                                <option></option>\r\n                                <option value = {1}>1</option>\r\n                                <option value = {2}>2</option>\r\n                                <option value = {3}>3</option>\r\n                                <option value = {4}>4</option>\r\n                                <option value = {5}>5</option>\r\n                            </select>\r\n                        </label>\r\n                        <label>\r\n                            Price policy:\r\n                            <select className = \"policy-field\" name = \"policy\" value = {this.state.policy} onChange={this.handleChange}>\r\n                                <option></option>\r\n                                <option value = {1}>1</option>\r\n                                <option value = {2}>2</option>\r\n                                <option value = {3}>3</option>\r\n                                <option value = {4}>4</option>\r\n                                <option value = {5}>5</option>\r\n                            </select>\r\n                        </label>\r\n                        <label>\r\n                            Energy (kWh):\r\n                            <input className = \"vehicle-field\" type = \"number\" name = \"energy\" value = {this.state.energy} onChange = {this.handleChange} />\r\n                        </label> <br />\r\n                        <button className = \"cost-button\" onClick = {this.handleSubmit}>Get cost estimation</button>\r\n                    </form>\r\n                </div>\r\n                <hr />\r\n                {this.state.costEstimated ? this.displayResults() : <div></div>}\r\n                {this.state.clickedProceed ? this.displayFinalStep() : <div></div>}\r\n                {this.state.responseReceived ? <div><h3>Transaction completed</h3></div> : <div></div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChargeEV;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport querystring from 'querystring';\r\n\r\nimport './Diagrams.css'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nclass Diagrams extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            station: null,\r\n            startDate: null,\r\n            endDate: null,\r\n            plotData: null,\r\n            vehicleData: null,\r\n            stationData: null,\r\n            vehicle: null,\r\n            command: null,\r\n            responseReceived: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePlotSubmit = this.handlePlotSubmit.bind(this);\r\n        this.handleVehicleSubmit = this.handleVehicleSubmit.bind(this);\r\n        this.handleAnalyticsSubmit = this.handleAnalyticsSubmit.bind(this);\r\n        this.selectRenderer = this.selectRenderer.bind(this);\r\n        this.plotResults = this.plotResults.bind(this);\r\n        this.displayAnalytics = this.displayAnalytics.bind(this);\r\n        this.vehicleReport = this.vehicleReport.bind(this);\r\n    }\r\n\r\n    handleChange(event)\r\n    {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        // must check for type if datatypes are different, here both are strings\r\n        const name = target.name;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleVehicleSubmit(event)\r\n    {\r\n        event.preventDefault();\r\n\r\n\r\n           if(this.state.station && this.state.vehicle && this.state.startDate && this.state.endDate)\r\n            {\r\n\r\n                // connect with backend function - send request\r\n                let url = `https://localhost:8765/evcharge/api/VehicleStation/${this.state.station}/${this.state.vehicle}/${this.state.startDate}/${this.state.endDate}`;\r\n\r\n\r\n                    axios.get(url, {\r\n                                    headers: {\r\n                                            \"X-OBSERVATORY-AUTH\": `${document.cookie}`\r\n                                    }\r\n                            }).then(res => {\r\n                                    let obj = res.data;\r\n                                    JSON.stringify(obj)\r\n                                    this.setState({vehicleData: obj})\r\n                                    if(this.state.vehicleData){\r\n                                            this.setState({command : \"vehicle\"});\r\n                                            this.setState({responseReceived : true});\r\n                                    }\r\n\r\n                            })\r\n                            .catch(error => {\r\n                                    console.error(error)\r\n                            });\r\n\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n                this.setState({ error: \"Information required\" });\r\n            }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    handleAnalyticsSubmit(event)\r\n    {\r\n        event.preventDefault();\r\n\r\n\r\n            if(this.state.station && this.state.startDate && this.state.endDate)\r\n            {\r\n\r\n                // connect with backend function - send request\r\n                let url = `https://localhost:8765/evcharge/api/ReportStation/${this.state.station}/${this.state.startDate}/${this.state.endDate}`;\r\n\r\n\r\n                    axios.get(url, {\r\n                                    headers: {\r\n                                            \"X-OBSERVATORY-AUTH\": `${document.cookie}`\r\n                                    }\r\n                            }).then(res => {\r\n                                    let obj = res.data;\r\n                                    JSON.stringify(obj)\r\n                                    this.setState({stationData: obj})\r\n                                    if(this.state.stationData){\r\n                                            this.setState({command : \"analytics\"});\r\n                                            this.setState({responseReceived : true});\r\n                                    }\r\n\r\n                            })\r\n                            .catch(error => {\r\n                                    console.error(error)\r\n                            });\r\n\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n                this.setState({ error: \"Information required\" });\r\n            }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    handlePlotSubmit(event)\r\n    {\r\n        event.preventDefault();\r\n\r\n\r\n\r\n            if(this.state.station && this.state.startDate && this.state.endDate)\r\n            {\r\n\r\n                // connect with backend function - send request\r\n                let url = `https://localhost:8765/evcharge/api/ChargesStation/${this.state.station}/${this.state.startDate}/${this.state.endDate}`;\r\n\r\n\r\n                    axios.get(url, {\r\n                                    headers: {\r\n                                            \"X-OBSERVATORY-AUTH\": `${document.cookie}`\r\n                                    }\r\n                            }).then(res => {\r\n                                    let obj = res.data;\r\n                                    JSON.stringify(obj)\r\n                                    this.setState({plotData: obj})\r\n                                    if(this.state.plotData){\r\n                                            this.setState({command : \"plot\"});\r\n                                            this.setState({responseReceived : true});\r\n                                    }\r\n\r\n                            })\r\n                            .catch(error => {\r\n                                    console.error(error)\r\n                            });\r\n\r\n\r\n\r\n            }\r\n            else\r\n            {\r\n                this.setState({ error: \"Information required\" });\r\n            }\r\n            // connect with backend function - send request\r\n\r\n    }\r\n\r\n\r\n    selectRenderer()\r\n    {\r\n        if(this.state.command === \"plot\") return this.plotResults();\r\n        else if(this.state.command === \"vehicle\") return this.vehicleReport();\r\n        else if(this.state.command === \"analytics\") return this.displayAnalytics();\r\n    }\r\n\r\n    vehicleReport()\r\n    {\r\n        return (\r\n            <div className = \"result-area\">\r\n                <p>Total energy consumed: {this.state.vehicleData[\"energy\"]} kWh</p>\r\n                <p>Total expenses: {this.state.vehicleData[\"expense\"]} €</p>\r\n                <p>Number of charging events: {this.state.vehicleData[\"transactions\"]}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    displayAnalytics()\r\n    {\r\n        let avgenergy = this.state.stationData[\"energy\"] / this.state.stationData[\"transactions\"];\r\n        avgenergy = Math.round(avgenergy * 100) / 100;\r\n        let avgincome = this.state.stationData[\"income\"] / this.state.stationData[\"transactions\"];\r\n        avgincome = Math.round(avgincome * 100) / 100;\r\n        return (\r\n            <div className = \"result-area\">\r\n                <p>Total energy delivered: {this.state.stationData[\"energy\"]} kWh</p>\r\n                <p>Total income: {this.state.stationData[\"income\"]} €</p>\r\n                <p>Number of charging events: {this.state.stationData[\"transactions\"]}</p>\r\n                <p>Average energy per session: {avgenergy} kWh</p>\r\n                <p>Average income per session: {avgincome} €</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    plotResults()\r\n    {\r\n        let xlabels = [];\r\n        let sessions = [];\r\n        let incomes = [];\r\n        let energies = [];\r\n        for(var i = 0; i < this.state.plotData.length; i++)\r\n        {\r\n            xlabels.push(this.state.plotData[i][\"date\"]);\r\n            sessions.push(this.state.plotData[i][\"sessions\"]);\r\n            incomes.push(this.state.plotData[i][\"income\"]);\r\n            energies.push(this.state.plotData[i][\"energy\"]);\r\n        }\r\n\r\n        console.log(this.state.plotData);\r\n        console.log(xlabels);\r\n\r\n        return (\r\n            <div className = \"result-area\">\r\n                <Line\r\n                    data = {{\r\n                        labels: xlabels,\r\n                        datasets: [\r\n                            {\r\n                                label: \"Sessions\",\r\n                                data: sessions,\r\n                            },\r\n                        ],\r\n                    }}\r\n                    options = {{\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n                <br />\r\n                <Line\r\n                    data = {{\r\n                        labels: xlabels,\r\n                        datasets: [\r\n                            {\r\n                                label: \"Income\",\r\n                                data: incomes,\r\n                            },\r\n                        ],\r\n                    }}\r\n                    options = {{\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n                <br />\r\n                <Line\r\n                    data = {{\r\n                        labels: xlabels,\r\n                        datasets: [\r\n                            {\r\n                                label: \"Energy\",\r\n                                data: energies,\r\n                            },\r\n                        ],\r\n                    }}\r\n                    options = {{\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>Third Use Case - Diagrams</h1>\r\n                <div className = \"diagram-form-area\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            Station:\r\n                            <input className = \"station-field\" name = \"station\" value = {this.state.station} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            Vehicle:\r\n                            <input className = \"vehicle-field\" name = \"vehicle\" value = {this.state.vehicle} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            From:\r\n                            <input className = \"date-field\" type = \"date\" name = \"startDate\" value = {this.state.startDate} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <label>\r\n                            Until:\r\n                            <input className = \"date-field\" type = \"date\" name = \"endDate\" value = {this.state.endDate} onChange={this.handleChange} />\r\n                        </label> <br />\r\n                        <button className = \"plot-button\" onClick = {this.handlePlotSubmit}>Plot session data</button>\r\n                        <button className = \"report-button\" onClick = {this.handleVehicleSubmit}>Get vehicle report</button>\r\n                        <button className = \"analytics-button\" onClick = {this.handleAnalyticsSubmit}>Station analytics</button>\r\n                      </form>\r\n                  </div>\r\n                  <hr />\r\n                  {this.state.responseReceived ? this.selectRenderer() : <div></div>}\r\n              </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Diagrams;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './App.css';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar(props)\r\n{\r\n        let loggedIn = props.loggedIn\r\n    return (\r\n        <nav>\r\n                {console.log(loggedIn)}\r\n            <ul>\r\n                <li><Link className = \"link-text\" to = \"/homepage\">Homepage</Link></li>\r\n                <li>\r\n                    <div className = \"dropdown\">\r\n                        <div className = \"link-text\">Sessions</div>\r\n                        <div className = \"dropdown-content\">\r\n                            <div><Link className = \"link-text\" to = \"/sessions-point\">Per point</Link></div>\r\n                            <div><Link className = \"link-text\" to = \"/sessions-vehicle\">Per vehicle</Link></div>\r\n                            <div><Link className = \"link-text\" to = \"/sessions-station\">Per station</Link></div>\r\n                            <div><Link className = \"link-text\" to = \"/sessions-provider\">Per provider</Link></div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div className = \"dropdown\">\r\n                        <div className = \"link-text\">Use Cases</div>\r\n                        <div className = \"dropdown-content\">\r\n                            <div><Link className = \"link-text\" to = \"/select-station\">Select station</Link></div>\r\n                            <div><Link className = \"link-text\" to = \"/charge-ev\">Charge EV</Link></div>\r\n                            <div><Link className = \"link-text\" to = \"/diagrams\">Diagrams</Link></div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './App.css';\nimport './Navbar.css';\n\nfunction NavbarAdmin()\n{\n\n    return (\n        <nav>\n            <ul>\n                <li><Link className = \"link-text\" to = \"/user-mod\">User Mod</Link></li>\n                <li><Link className = \"link-text\" to = \"/user-get\">User Get</Link></li>\n                <li><Link className = \"link-text\" to = \"/user-delete\">Delete User</Link></li>\n                <li><Link className = \"link-text\" to = \"/upload-file\">Upload File</Link></li>\n                <li><Link className = \"link-text\" to = \"/healthcheck\">Health Check</Link></li>\n                <li><Link className = \"link-text\" to = \"/reset-sessions\">Reset Sessions</Link></li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default NavbarAdmin;\n","import React from 'react';\nimport './Admin.css'\nimport axios from 'axios';\nimport querystring from 'querystring';\n\nclass UserMod extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { username: null, password: null, responseReceived: false };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n\n        if (this.state.username && this.state.password)\n        {\n\n            // connect with backend function\n            let url = `https://localhost:8765/evcharge/api/admin/usermod/${this.state.username}/${this.state.password}`;\n\n\n               axios.post(url, null, {\n                               headers: {\n                                       \"X-OBSERVATORY-AUTH\": `${document.cookie}`\n                               }\n                       }).then(res => {\n                               console.log(res.data);\n                               this.setState({ responseReceived : true });\n                       })\n                       .catch(error => {\n                               console.error(error)\n                       });\n        }\n        else\n        {\n            this.setState({ error: \"Information required\" });\n        }\n    }\n\n    render()\n    {\n        return (\n            <div>\n                <h1>User Modification</h1>\n                <div className = \"usermod-area\">\n                    <form>\n                        <label className = \"username-field\">\n                            Username:\n                            <input type = \"text\" name = \"username\" value = {this.state.username} onChange = {this.handleChange}/>\n                        </label>\n                        <label className = \"password-field\">\n                            Password:\n                            <input type = \"text\" name = \"password\" value = {this.state.password} onChange = {this.handleChange}/>\n                        </label>\n                        <br />\n                        <button className = \"enter-button\" onClick = {this.handleSubmit}>Enter</button>\n                    </form>\n                </div>\n                <hr/>\n                {this.state.responseReceived ? <div><h3>User \"{this.state.username}\" has been modified successfully</h3></div> : <div></div>}\n            </div>\n        );\n    }\n}\n\nexport default UserMod;\n","import React from 'react';\nimport './Admin.css'\nimport axios from 'axios';\nimport querystring from 'querystring';\n\nclass UserGet extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { username: null, responseReceived: false, userData: null, notfound:false };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.displayResults = this.displayResults.bind(this);\n    }\n\n    handleChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n\n        if (this.state.username)\n        {\n\n            // connect with backend function\n\n            let url = `https://localhost:8765/evcharge/api/admin/users/${this.state.username}`;\n\n\n               axios.get(url, {\n                               headers: {\n                                       \"X-OBSERVATORY-AUTH\": `${document.cookie}`\n                               }\n                       }).then(res => {\n                               let obj = res.data;\n                               this.setState({userData : obj});\n                               this.setState({ responseReceived : true });\n\n                       })\n                       .catch(error => {\n                               this.setState({ notfound : true });\n                               //console.error(error)\n                       });\n\n\n        }\n        else\n        {\n            this.setState({ error: \"Information required\" });\n        }\n    }\n\n    displayResults()\n    {\n        console.log(this.state.userData[\"username\"]);\n        return (\n            <div className = \"admin-area\">\n                <p>User name: {this.state.userData[\"username\"]}</p>\n                <p>Password: {this.state.userData[\"password\"]}</p>\n                <p>Role: {this.state.userData[\"role\"]}</p>\n            </div>\n        );\n    }\n\n    render()\n    {\n        return (\n            <div>\n                <h1>Get User Information</h1>\n                <div className = \"userget-area\">\n                    <form>\n                        <label className = \"username-field\">\n                            Username:\n                            <input type = \"text\" name = \"username\" value = {this.state.username} onChange = {this.handleChange}/>\n                        </label>\n                        <br />\n                        <button className = \"enter-button\" onClick = {this.handleSubmit}>Enter</button>\n                    </form>\n                </div>\n                <hr/>\n                {this.state.responseReceived && !this.state.notfound ? this.displayResults() : <div></div>}\n                {this.state.responseReceived && this.state.notfound ? <div className = \"admin-area\">User not found</div> : <div></div>}\n            </div>\n        );\n    }\n}\n\nexport default UserGet;\n","import React from 'react';\nimport './Admin.css'\nimport axios from 'axios';\nimport querystring from 'querystring';\n\nclass Healthcheck extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { status: null };\n\n        // SEND THE REQUEST FROM HERE, UPDATE STATUS\n        let url = `https://localhost:8765/evcharge/api/admin/healthcheck`;\n        axios.get(url, null)\n            .then(res => {\n                let obj = res.data;\n                JSON.stringify(obj)\n                //console.log(obj)\n                this.setState({status: obj.status})\n        })\n        .catch(error => {\n            console.error(error)\n\n        });\n\n    }\n\n    render()\n    {\n        return (\n            <div>\n                <h1>Health Check</h1>\n                <div className = \"admin-area\">\n                    <p>Status: {this.state.status}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Healthcheck;\n","import React from 'react';\nimport './Admin.css'\nimport axios from 'axios';\nimport querystring from 'querystring';\n\nclass UserDelete extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { username: null, clickedDelete: false, responseReceived: false };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.finalConfirmation = this.finalConfirmation.bind(this);\n    }\n\n    handleChange(event)\n    {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({ [name]: value });\n    }\n\n    handleClick(e)\n    {\n        e.preventDefault();\n\n        this.setState({ clickedDelete: true });\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n\n        if(this.state.username)\n        {\n            // connect with backend function\n            let url = `https://localhost:8765/evcharge/api/users/${this.state.username}`;\n\n\n               axios.delete(url, {\n                               headers: {\n                                       \"X-OBSERVATORY-AUTH\": `${document.cookie}`\n                               }\n                       }).then(res => {\n                               //console.log(res.data);\n                               this.setState({responseReceived: true});\n\n                       })\n                       .catch(error => {\n                               console.error(error)\n                       });\n            }\n            else\n            {\n            this.setState({ error: \"Information required\" });\n            }\n\n    }\n\n    finalConfirmation()\n    {\n        return (\n            <div className = \"admin-area\">\n                Permanently delete user?\n                <button className = \"enter-button\" onClick = {this.handleSubmit}>Confirm</button>\n                <br />\n            </div>\n        )\n    }\n\n    render()\n    {\n        return (\n            <div>\n                <h1>User Deletion</h1>\n                <div className = \"userget-area\">\n                    <form>\n                        <label className = \"username-field\">\n                            Username:\n                            <input type = \"text\" name = \"username\" value = {this.state.username} onChange = {this.handleChange}/>\n                        </label>\n                        <br />\n                        <button className = \"enter-button\" onClick = {this.handleClick}>Delete</button>\n                    </form>\n                </div>\n                {this.state.clickedDelete ? this.finalConfirmation() : <div></div>}\n                {this.state.responseReceived ? <div><br /><h3>User \"{this.state.username}\" has been terminated</h3></div> : <div></div>}\n            </div>\n        );\n    }\n}\n\nexport default UserDelete;\n","import React from 'react';\nimport './Admin.css';\nimport axios from 'axios';\nimport querystring from 'querystring';\n\nclass ResetSessions extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = { responseReceived: false, confirm: false, click0: false, click1: false, click2: false, click3: false };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClick0 = this.handleClick0.bind(this);\n        this.handleClick1 = this.handleClick1.bind(this);\n        this.handleClick2 = this.handleClick2.bind(this);\n        this.handleClick3 = this.handleClick3.bind(this);\n        this.displayConfirmation1 = this.displayConfirmation1.bind(this);\n        this.displayConfirmation2 = this.displayConfirmation2.bind(this);\n        this.displayConfirmation3 = this.displayConfirmation3.bind(this);\n        this.displayConfirmation4 = this.displayConfirmation4.bind(this);\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        this.setState({confirm : true})\n        let url = `https://localhost:8765/evcharge/api/admin/resetsessions`;\n\n        axios.post(url, null)\n                .then(res => {\n                        let obj = res.data;\n                        JSON.stringify(obj)\n\n                })\n                .catch(error => {\n                        console.error(error)\n                });\n\n    }\n\n    handleClick0(e)\n    {\n        e.preventDefault();\n        this.setState({click0 : true})\n    }\n\n    handleClick1(e)\n    {\n        e.preventDefault();\n        this.setState({click1 : true})\n    }\n\n    handleClick2(e)\n    {\n        e.preventDefault();\n        this.setState({click2 : true})\n    }\n\n    handleClick3(e)\n    {\n        e.preventDefault();\n        this.setState({click3 : true})\n    }\n\n    displayConfirmation1()\n    {\n        return (\n            <div className = \"admin-area\">\n                Are you sure?\n                <br />\n                <button className = \"reset-button\" onClick = {this.handleClick1}>Yes</button>\n                <button className = \"reset-button\">No</button>\n                <br />\n            </div>\n        )\n    }\n\n    displayConfirmation2()\n    {\n        return (\n            <div className = \"admin-area\">\n                <em>Absolutely</em> certain? This action will delete all data from the database\n                <br />\n                <button className = \"reset-button\" onClick = {this.handleClick2}>Yes</button>\n                <button className = \"reset-button\">No</button>\n                <br />\n            </div>\n        )\n    }\n\n    displayConfirmation3()\n    {\n        return (\n            <div className = \"admin-area\">\n                There is no way of recovering the sessions once reset. Please confirm again:\n                <br />\n                <button className = \"reset-button\" onClick = {this.handleClick3}>Yes, delete</button>\n                <button className = \"reset-button\">No, go back</button>\n                <br />\n            </div>\n        )\n    }\n\n    displayConfirmation4()\n    {\n        return (\n            <div className = \"admin-area\">\n                One last time!\n                <br />\n                <button className = \"reset-button\" onClick = {this.handleSubmit}>Delete all sessions</button>\n                <button className = \"reset-button\">Cancel</button>\n                <br />\n            </div>\n        )\n    }\n\n    render()\n    {\n        return (\n            <div>\n                <h1>Reset Sessions</h1>\n                <div className = \"admin-area\">\n                    <form>\n                        <label className = \"reset-label\">\n                            Click here to delete all sessions forever:\n                        </label> <br />\n                        <button className = \"reset-button\" onClick = {this.handleClick0}>Reset</button>\n                    </form>\n                </div>\n                {this.state.click0 ? this.displayConfirmation1() : <div></div>}\n                {this.state.click1 ? this.displayConfirmation2() : <div></div>}\n                {this.state.click2 ? this.displayConfirmation3() : <div></div>}\n                {this.state.click3 ? this.displayConfirmation4() : <div></div>}\n                {this.state.confirm ? <div><h3>All sessions deleted</h3></div> : <div></div>}\n            </div>\n        );\n    }\n}\n\nexport default ResetSessions;\n","import React from 'react';\nimport axios from 'axios';\nimport querystring from 'querystring';\n\nclass SubmitFile extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.fileInput = React.createRef();\n        this.state = {result: null, response: false}\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        //alert(`Selected file - ${this.fileInput.current.files[0].name}`);\n\n        let url = `https://localhost:8765/evcharge/api/admin/system/sessionsupd`;\n\n       var newFile = this.fileInput.current.files[0];\n       const form_data = new FormData();\n\n       form_data.append(\"file\", newFile);\n\n       //var imagefile = document.querySelector('#file');\n       //formData.append(\"image\", imagefile.files[0]);\n\n\n               axios.post(url, form_data, {\n                               headers: {\n                                       \"X-OBSERVATORY-AUTH\": `${document.cookie}`,\n                                       //\"Content-Type\": \"multipart/form-data\"\n                                       'Content-Type': `multipart/form-data; boundary=${form_data._boundary}`\n                               }\n                       }).then(res => {\n                               let val = JSON.stringify(res.data)\n                               this.setState({result: val, response: true})\n\n\n                       })\n                       .catch(error => {\n                               console.log(\"sth went wrong\")\n                               console.error(error)\n                       });\n\n\n    }\n\n\n    render()\n    {\n        return (\n            <div>\n                <h1>Upload .csv file</h1>\n                <div className = \"file-upload-area\">\n                    <form>\n                        <label className = \"file-label\">\n                            Upload:\n                            <input type = \"file\" accept = \".csv\" ref = {this.fileInput} />\n                        </label> <br />\n                        <button className = \"submit-button\" onClick = {this.handleSubmit}>Submit</button>\n                    </form>\n                </div>\n                {this.state.response ? <div><br /><h3>{this.state.result}</h3></div> : <div></div>}\n            </div>\n        );\n    }\n}\n\nexport default SubmitFile;\n","import React from 'react'\nimport porsche from './porsche3.jpg';\nimport './App.css';\nimport Homepage from './Homepage';\nimport SessionsPerPoint from './SessionsPerPoint';\nimport SessionsPerStation from './SessionsPerStation';\nimport SessionsPerVehicle from './SessionsPerVehicle';\nimport SessionsPerProvider from './SessionsPerProvider';\nimport SelectStation from './SelectStation';\nimport ChargeEV from './ChargeEV';\nimport Diagrams from './Diagrams';\nimport Navbar from './Navbar';\nimport NavbarAdmin from './NavbarAdmin';\nimport UserMod from './UserMod';\nimport UserGet from './UserGet';\nimport HealthCheck from './HealthCheck';\nimport UserDelete from './UserDelete';\nimport ResetSessions from './ResetSessions';\nimport SubmitFile from './SubmitFile';\nimport {Route, Link, BrowserRouter} from 'react-router-dom';\nimport axios from 'axios';\nimport querystring from 'querystring';\n\nclass App extends React.Component {\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            showComponent: 0,\n            username: undefined,\n            password: undefined,\n            datefrom: undefined,\n            dateto: undefined,\n            station: undefined,\n            showstation: false,\n            loggedIn: false,\n            tokenPath : \"./softeng20bAPI.token\",\n            token: undefined,\n            role: null,\n        };\n\n        this._onButtonClick = this._onButtonClick.bind(this);\n        this.LoginProcess = this.LoginProcess.bind(this);\n        this.LogoutProcess = this.LogoutProcess.bind(this);\n        this.showspecs = this.showspecs.bind(this);\n        this.myChangeHandler = this.myChangeHandler.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    _onButtonClick() {\n        let val = 0;\n        if(this.state.showComponent)\n            val = 0;\n        else\n        {\n            val = 1;\n        }\n\n        this.setState({\n            showComponent: val,\n        });\n    }\n\n    mySubmitHandler = (event) => {\n        event.preventDefault();\n        console.log(this.state.dateto);\n        console.log(this.state.station);\n        console.log(this.state.datefrom);\n        if(this.state.datefrom && this.state.dateto && this.state.station)\n        {\n            this.setState({showstation: true});\n            console.log(\"submitted\");\n            this.setState({showStation: true});\n        }\n        else\n        {\n            console.log(\"you must enter everything\");\n        }\n    }\n\n    myChangeHandler = (event) => {\n            event.preventDefault();\n\n          let nam = event.target.name;\n          let val = event.target.value;\n          this.setState({[nam]: val});\n\n  }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        console.log(this.state.username, this.state.password, this.state.tokenPath)\n\n        if(this.state.username && this.state.password){\n                this.LoginProcess();\n        }else{\n                console.log(\"specify everything\");\n        }\n\n    }\n\n    showspecs = (event) => {\n                    console.log(this.state.token, this.state.loggedin, document.cookie)\n\n    }\n\n    render()\n    {\n        if(this.state.loggedIn)\n        {\n                console.log(this.state.role)\n            if(this.state.role === \"ADMIN\")\n                return (\n                    <div className=\"App\">\n                        <header className = \"app-header\">Welcome back, Agent 47</header>\n                        <button className = \"logout-button\" onClick = {this.LogoutProcess}>Log out</button>\n                        <NavbarAdmin />\n                        <Route exact path = \"/user-mod\" component = {UserMod} />\n                        <Route exact path = \"/user-get\" component = {UserGet} />\n                        <Route exact path = \"/user-delete\" component = {UserDelete} />\n                        <Route exact path = \"/upload-file\" component = {SubmitFile} />\n                        <Route exact path = \"/healthcheck\" component = {HealthCheck} />\n                        <Route exact path = \"/reset-sessions\" component = {ResetSessions} />\n                    </div>\n                );\n            else\n                return (\n                    <div className=\"App\">\n                        <header className = \"app-header\">Software Engineering Project</header>\n                        <button className = \"logout-button\" onClick = {this.LogoutProcess}>Log out</button>\n                        <Navbar loggedIn = {this.state.loggedIn}/>\n                        <Route exact path = \"/\" component = {Homepage} />\n                        <Route exact path = \"/homepage\" component = {Homepage} />\n                        <Route exact path = \"/sessions-point\" component = {SessionsPerPoint} />\n                        <Route exact path = \"/sessions-station\" component = {SessionsPerStation} />\n                        <Route exact path = \"/sessions-vehicle\" component = {SessionsPerVehicle} />\n                        <Route exact path = \"/sessions-provider\" component = {SessionsPerProvider} />\n                        <Route exact path = \"/select-station\" component = {SelectStation} />\n                        <Route exact path = \"/charge-ev\" component = {ChargeEV} />\n                        <Route exact path = \"/diagrams\" component = {Diagrams} />\n                    </div>\n                );\n        }\n        else\n        {\n            return (\n                <div>\n                    <div className = \"home-container\">\n                        <img src = {porsche} className = \"login-image\" />\n                        <div className = \"home-text\">\n                        <h1 className = \"login-text\">This is the login page</h1>\n                        <div className = \"login-area\">\n                            <form>\n                                <label>\n                                    Username:\n                                    <input className = \"username-field\" type = \"text\" name = \"username\" onChange = {this.myChangeHandler} />\n                                </label> <br />\n                                <label>\n                                    Password:\n                                    <input className = \"password-field\" type = \"password\" name = \"password\" onChange = {this.myChangeHandler} />\n                                </label> <br />\n                                <button onClick={this.handleSubmit}>Login</button>\n                              </form>\n                          </div>\n                         </div>\n                      </div>\n                  </div>\n            );\n        }\n\n    }\n\n    LoginProcess(){\n            console.log(this.state.username, this.state.password, this.state.tokenPath)\n            let url = `https://localhost:8765/evcharge/api/login`;\n            axios.post(url,\n                querystring.stringify({\n                    \"username\": this.state.username,\n                    \"password\": this.state.password\n                }),\n                {\n                    headers: {\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\n                    }\n                }).then(res => {\n                        console.log(\"we are here\")\n                        let obj = res.data;\n                        JSON.stringify(obj)\n                        this.setState({token: obj.token})\n                        console.log(this.state.token)\n                        document.cookie = obj.token;\n                        if(obj.token)\n                                this.setState({loggedIn: true,})\n\n            })\n            .catch(error => {\n                this.setState({token: null, loggedIn: false})\n            });\n\n            url = `https://localhost:8765/evcharge/api/users/${this.state.username}`;\n\n            axios.get(url, null)\n                .then(res => {\n                    let obj = res.data;\n                    console.log(obj)\n                    this.setState({role: obj})\n            })\n            .catch(error => {\n                console.error(error)\n            });\n\n}\n\n\n    LogoutProcess()\n    {\n        document.cookie = null;\n        this.setState({token: undefined, loggedIn: false})\n        console.log(this.state.token)\n        console.log(this.state.loggedin)\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}